{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/city/city.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/city/city.component.css","./src/app/city/city.component.ts","./src/app/http.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n\\n\\n\\n\\n<div class=\\\"container\\\">\\n    <nav class=\\\"navbar navbar-expand-md navbar-light bg-light\\\">\\n        <a class=\\\"navbar-brand\\\">Weather API</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n            <ul class=\\\"navbar-nav\\\">\\n                <li *ngFor=\\\"let city of cities\\\" class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/'+city.route]\\\">{{ city.name }}</a>\\n                </li>\\n            </ul>\\n            \\n            \\n        </div>\\n    </nav>\\n\\n    <router-outlet></router-outlet>\\n\\n\\n</div>\\n\\n\"","module.exports = \"<div class=\\\"city-container\\\" [ngStyle]=\\\"{ 'background-image': 'url(' + cityRoutes[cityRoute].image + ')' }\\\">\\n    <!-- <img class=\\\"city-img\\\" src=\\\"{{cityRoutes[cityRoute].image}}\\\"> -->\\n    <p>{{weather | json}}</p>\\n    <div class=\\\"card w-50 mx-auto\\\">\\n        <div class=\\\"card-header\\\"><h2>{{cityName}}</h2></div>\\n        <div class=\\\"card-body row\\\">\\n            <div class=\\\"col-6 d-flex justify-items-center\\\">\\n                <div>\\n                    <img *ngFor=\\\"let condition of weather.status\\\" src=\\\"https://openweathermap.org/img/wn/{{condition.icon}}@2x.png\\\" style=\\\"display:inline-block;\\\">\\n                </div>\\n                <h1>{{ weather.temp }}&deg;</h1>\\n            </div>\\n        </div>\\n    </div>\\n    \\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CityComponent } from './city/city.component';\n\nconst routes: Routes = [\n  {path: ':route', component: CityComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { HttpService } from './http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'public';\n\n  units: any;\n\n  selectedRoute: any;\n\n  cityRoutes = {\n    'burbank': {name: 'Burbank',  id: 5331835},\n    'chicago': {name: 'Chicago',  id: 4887398},\n    'dallas': {name: 'Dallas',  id: 4684888},\n    'dc': {name: 'Washington, DC',  id: 4366164},\n    'sanjose': {name: 'San Jose', id: 5392171},\n    'seattle': {name: 'Seattle',  id: 5809844},\n  };\n\n  cities = [\n    {name: 'Burbank, CA', route: 'burbank', id: 5331835},\n    {name: 'Chicago, IL', route: 'chicago', id: 4887398},\n    {name: 'Dallas, TX', route: 'dallas', id: 4684888},\n    {name: 'Washington, DC', route: 'dc', id: 4366164},\n    {name: 'San Jose, CA', route: 'sanjose', id: 5392171},\n    {name: 'Seattle, WA', route: 'seattle', id: 5809844},\n  ]\n\n  // unitKeys = {Kelvin: 'Standard', Celsius: 'Metric', Fahrenheit: 'Imperial'}\n  // tempUnits = ['Kelvin', 'Celsius', 'Fahrenheit']\n\n  constructor(private _httpService: HttpService,\n    private _router: Router) {}\n  ngOnInit() {\n    \n  }\n\n  // chooseRoute(route) {\n  //   this.selectedRoute = route;\n  // }\n  // setUnits(tempUnit) {\n    \n  //   this._httpService.setUnits(this.unitKeys[tempUnit]);\n  //   this._httpService.refresh();\n  // }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpService } from './http.service';\nimport { CityComponent } from './city/city.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CityComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".city-img {\\r\\n    max-width:100%;\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n.city-container {\\r\\n    background-size:cover;\\r\\n    min-height:500px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2l0eS9jaXR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjOzs7QUFHbEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY2l0eS9jaXR5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2l0eS1pbWcge1xyXG4gICAgbWF4LXdpZHRoOjEwMCU7XHJcblxyXG5cclxufVxyXG5cclxuLmNpdHktY29udGFpbmVyIHtcclxuICAgIGJhY2tncm91bmQtc2l6ZTpjb3ZlcjtcclxuICAgIG1pbi1oZWlnaHQ6NTAwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router'; //to obtain url parameters\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.css']\n})\nexport class CityComponent implements OnInit {\n\n  weather: any;\n  \n  cityRoute: any;\n  cityName: any;\n  cityId: any;\n\n  iconUrl = 'http://openweathermap.org/img/wn/'\n\n  \n  cityRoutes = {\n    'burbank': {name: 'Burbank',  id: 5331835, image: 'https://images.pexels.com/photos/2816168/pexels-photo-2816168.jpeg'},\n    'chicago': {name: 'Chicago',  id: 4887398, image: 'https://images.pexels.com/photos/161963/chicago-illinois-skyline-skyscrapers-161963.jpeg'},\n    'dallas': {name: 'Dallas',  id: 4684888, image: 'https://images.pexels.com/photos/2051002/pexels-photo-2051002.jpeg'},\n    'dc': {name: 'Washington, DC',  id: 4366164, image: 'https://images.pexels.com/photos/2446915/pexels-photo-2446915.jpeg'},\n    'sanjose': {name: 'San Jose', id: 5392171, image: 'https://images.pexels.com/photos/258447/pexels-photo-258447.jpeg'},\n    'seattle': {name: 'Seattle',  id: 5809844, image: 'https://images.pexels.com/photos/37350/space-needle-seattle-washington-cityscape.jpg'},\n  };\n\n\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _httpService: HttpService\n  ) { }\n\n  ngOnInit() {\n    this.weather = {\n      humidity: '',\n      temp:'',\n      tempH:'',\n      tempL:'',\n      status:[]\n    }\n    this._route.params.subscribe((params: Params) => {\n      console.log(params);\n      let route = params.route;\n      this.cityRoute =route;\n      this.cityId = this.cityRoutes[route].id;\n      this.cityName = this.cityRoutes[route].name;\n      console.log(this.cityRoute, this.cityId, this.cityName)\n      this.getWeather();\n    });\n  }\n\n  goHome() {\n    this._router.navigate(['/' + this.cityRoute]);\n  }\n\n  getWeather() {\n    let observer = this._httpService.getWeatherById(this.cityId);\n    observer.subscribe(data => {\n      console.log(data);\n      let weather = {\n        humidity: data['main'].humidity,\n        temp: Math.round(data['main'].temp),\n        tempH: data['main'].temp_max,\n        tempL: data['main'].temp_min,\n        status: data['weather']\n      }\n      this.weather = weather;\n    })\n  }\n\n  getIcon(icon) {\n    return `http://openweathermap.org/img/wn/${icon}`\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpService {\n  // cities = {\n  //   burbank: 5331835,\n  //   chicago: 4887398,\n  //   dallas: 4684888,\n  //   dc: 4366164,\n  //   sanjose: 4673475,\n  //   seattle: 5809844,\n  // }\n\n  currentRoute = '';\n\n  url = 'https://api.openweathermap.org/data/2.5/weather'\n  params = {\n    id: '',\n    units: 'Imperial',\n    APPID: '776fdde7119ba5a1d66b80692b7b22ca'\n  }\n  \n  constructor(private _http: HttpClient) { }\n\n  \n  getWeatherById(cityId) {\n    this.currentRoute = cityId;\n    this.params.id = cityId;\n    return this._http.get(this.url, {params: this.params});\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}